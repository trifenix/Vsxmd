trigger:
    branches:
      include:        
        - master  
pool:
  vmImage: "ubuntu-latest"

variables: 
  BuildConfiguration: 'release'
  

pr: none
  
steps:

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.1'
      includePrerelease: false
    displayName : "Configurando gitversion"

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: "deploy/gitConfig.yml" 
    displayName: "generando la nueva versión"
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: 'Vsxmd/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(default-feed)'      
      versioningScheme: byBuildNumber
    displayName: "Restore package"

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: 'Vsxmd/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(default-feed)'      
      arguments: "-c Release"
    displayName: "build"

  - task: DotNetCoreCLI@2
    inputs:      
      command: 'publish'
      projects: 'Vsxmd/*.csproj'     
      publishWebProjects: false
      zipAfterPublish: true
      artifactName: "-c Release"


  - script: |
      ls $(Build.SourcesDirectory)/Vsxmd/bin/Release/netcoreapp3.1/
      sudo apt install -y zip      
      zip -r Vsxmd.$(SemVer).zip $(Build.SourcesDirectory)/Vsxmd/bin/Release/netcoreapp3.1/
      git config --global user.email "alejandro.iglesias@trifenix.io"
      git config --global user.name "alejandro.iglesias"    
      git clone https://alejandro.iglesias:$(script-token)@github.com/trifenix/scripts.git web
      mkdir -p ./web/static/vsxmd/      
      cp Vsxmd.$(SemVer).zip ./web/static/vsxmd/
      cd ./web
      git add . && git commit -m "generación automática de Vsxmd.$(SemVer).zip"
      git push origin master

    displayName: "publicando en github"

  



  
  
