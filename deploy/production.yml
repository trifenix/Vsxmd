trigger:
    branches:
      include:        
        - master  
pool:
  vmImage: "ubuntu-latest"

variables: 
  BuildConfiguration: 'release'
  

pr: none
  
steps:

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.1'
      includePrerRelease: false
    displayName : "Configurando gitversion"

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: "deploy/gitConfig.yml" 
    displayName: "generando la nueva versi√≥n"
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(default-feed)'      
      versioningScheme: byBuildNumber

  - script : |
      cd Vsxmd
    displayName: 'pwd'

  - script : |
      mkdir -p ./bin/$(BuildConfiguration)/netcoreapp3.1/linux-musl-x64/publish/   
    displayName: 'creando carpetas para linux musl'

  - script : |
      dotnet publish -c $(BuildConfiguration) --runtime linux-musl-x64
    displayName: 'publish linux musl'
  
  - script : |
      mkdir -p ./bin/$(BuildConfiguration)/netcoreapp3.1/linux-x64/publish/
    displayName: 'creando carpetas para linux 64'
  
  - script : |
      dotnet publish -c $(BuildConfiguration) --runtime linux-x64
    displayName: 'publish linux 64'

  - script : |
      mkdir -p ./bin/$(BuildConfiguration)/netcoreapp3.1/osx-x64/publish/
    displayName: 'creando carpetas para osx-x64'

  - script : |
      dotnet publish -c $(BuildConfiguration) --runtime osx-x64
    displayName: 'publish osx-x64'
    
  - script : |
      mkdir -p ./bin/$(BuildConfiguration)/netcoreapp3.1/win-x64/publish/
    displayName: 'creando carpetas para win-x64'
  
  - script : |
      dotnet publish -c $(BuildConfiguration) --runtime win-x64
    displayName: 'publish win-x64'

  - script : |
      mkdir -p ./bin/$(BuildConfiguration)/netcoreapp3.1/win-x86/publish/
    displayName: 'creando carpetas para win-x86'
  
  - script : |
      dotnet publish -c $(BuildConfiguration) --runtime win-x86
    displayName: 'creando carpetas para win-x86'
  
  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack' 
    inputs: 
      command: pack
      packagesToPack: '**/Vsxmd.csproj'       
      arguments: '-c $(BuildConfiguration) /p:Version=$(SemVer)' 
      versioningScheme: byEnvVar 
      versionEnvVar: SemVer

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: drop
      publishLocation: 'container'
    displayName: "publish nuget"
