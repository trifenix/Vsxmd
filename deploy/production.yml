trigger:
    branches:
      include:        
        - master  
pool:
  vmImage: "ubuntu-latest"

variables: 
  BuildConfiguration: 'release'
  

pr: none
  
steps:

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.1'
      includePrerelease: false
    displayName : "Configurando gitversion"

  - task: gitversion/execute@0
    inputs:
      useConfigFile: true
      configFilePath: "deploy/gitConfig.yml" 
    displayName: "generando la nueva versi√≥n"
  
  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: 'Vsxmd/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(default-feed)'      
      versioningScheme: byBuildNumber

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: 'Vsxmd/*.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(default-feed)'      
      arguments: "-c Release"

  - task: DotNetCoreCLI@2
    inputs:      
      command: 'publish'
      projects: 'Vsxmd/*.csproj'     
      publishWebProjects: false
      zipAfterPublish: false
      artifactName: "-c Release"

  - task: CopyFiles@2
    inputs : 
      sourceFolder : "$(Build.SourcesDirectory)/Vsxmd/bin/Release/netcoreapp3.1/"
      contents: "Vsxmd.dll"
      targetFolder: "$(Build.ArtifactStagingDirectory)"
  
  - task: CmdLine@2
    inputs:
      script: "mv Vsxmd.dll Vsxmd.$(SemVer).dll"
      workingDirectory : "$(Build.ArtifactStagingDirectory)"

      


  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: drop
      publishLocation: 'container'
    displayName: "publish nuget"
  
  
